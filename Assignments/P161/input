19  20  0
30
    25  35  0
0   0   0


bool isGreen(int cycleTime)
{
    int startingCycle = cycleTime * 2; // ex: 19*2 = 38
    // green light is cycle time - 5 seconds orange light
    int green = cycleTime - 5;
    // count seconds
    int seconds = 0;
    // for (int i = 0; i < 18000; i++)
    while (1) // infinte while loop
    {
        if (seconds != green) // 0 is not 14
        {
            startingCycle += seconds; // then add 1 to startingCycle
            seconds++;
        }
        else
        {
            break;
        }
    }
    return true;
}

full cycle time = 19*2 = 38
14 green -- 5 orange -- 19 red
+1 is it red or green?
    38+1 = 39 - 38
    how would you know if this is green without looking at the chart!
loop seconds up to 18000
    if(seconds <= 14)
        return green
    elif(seconds > green or seconds < cycle) // orange
        return orange
    elif(seconds > cycle or seconds == full cycle time)
        return red
return seconds


















    bool isGreen(int cycleTime) // example we pass 19
{
    // int startingCycle = cycleTime * 2; // ex: 19*2 = 38
    int startingCycle = cycleTime * 2; // ex: 19*2 = 38
    // green light is cycle time - 5 seconds orange light
    int green = cycleTime - 5; // 19 -5 = 14
    // count seconds
    int countSeconds = 0;
    int i = 0;
    // for (int i = 0; i < 18000; i++)
    while(1)
    {
        if (countSeconds == green) // 0 <= 14
        {                     // green
            cout << "it's " << countSeconds << " seconds and it's green >>";
            return true;
        }
        countSeconds++;
    }
    return 0;
}